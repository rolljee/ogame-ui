{"version":3,"sources":["components/Title.js","components/RateText.js","components/RadioButton.js","components/TextInput.js","components/PrintResult.js","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","React","Component","RateText","_this$props","this","props","rate","selected","_Ogame$parseRate","Ogame","parseRate","rateMetal","rateCrystal","rateDeut","concat","RadioButton","className","htmlFor","id","type","data-toggle","name","value","checked","onChange","text","TextInput","placeholder","PrintResult","x","toString","replace","metal","crystal","deut","prettify","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","percentDeut","percentMetal","percentCrystal","_this$state","_Ogame$sellDeut","sellDeut","setState","_this$state2","_Ogame$sellMetal","sellMetal","_this$state3","_Ogame$sellCrystal","sellCrystal","e","target","resource","Number","printResult","split","console","log","_this$state4","_this2","_this$state5","_this$getPercent","getPercent","components_Title","components_RadioButton","isSelected","handleOnChange","components_TextInput","getRate","handleRateChange","handlePercentChange","handleResourceChange","components_PrintResult","components_RateText","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f43017b.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Title extends React.Component {\n  render() {\n    return <h1>Ogame commerce</h1>;\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport Ogame from \"ogamejs\";\n\nclass RateText extends React.Component {\n  render() {\n    const { rate, selected } = this.props;\n    const { rateMetal, rateCrystal, rateDeut } = Ogame.parseRate(\n      rate,\n      selected\n    );\n    if (selected === \"deut\") {\n      return `${rateDeut} deut = ${rateMetal} of metal and ${rateCrystal} crystal`;\n    } else if (selected === \"metal\") {\n      return `${rateMetal} metal = ${rateDeut} of deut and ${rateCrystal} crystal`;\n    } else if (selected === \"crystal\") {\n      return `${rateCrystal} crystal = ${rateDeut} of deut and ${rateMetal} metal`;\n    } else {\n      return \"Nothing selected\";\n    }\n  }\n}\n\nexport default RateText;\n","import React from \"react\";\n\nclass RadioButton extends React.Component {\n  render() {\n    return (\n      <label className=\"radio\" htmlFor={this.props.id}>\n        <input\n          type=\"radio\"\n          data-toggle=\"radio\"\n          className=\"custom-radio\"\n          id={this.props.id}\n          name={this.props.value}\n          value={this.props.value}\n          checked={this.props.checked}\n          onChange={this.props.onChange}\n        />\n        <span className=\"icons\">\n          <span className=\"icon-unchecked\" />\n          <span className=\"icon-checked\" />\n        </span>\n        {this.props.text}\n      </label>\n    );\n  }\n}\n\nexport default RadioButton;\n","import React from \"react\";\n\nclass TextInput extends React.Component {\n  render() {\n    return (\n      <div className=\"form-groups\">\n        <input\n          type=\"text\"\n          value={this.props.value}\n          onChange={this.props.onChange}\n          className=\"form-control input-xs\"\n          placeholder={this.props.placeholder}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TextInput;\n","import React from \"react\";\n\nclass PrintResult extends React.Component {\n  prettify(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  }\n  render() {\n    const { metal, crystal, deut, selected } = this.props;\n    let text = \"\";\n    if (selected === \"deut\") {\n      text = `Selling ${this.prettify(deut)} deuterium for ${this.prettify(\n        metal\n      )} metal and ${this.prettify(crystal)} crystal`;\n    } else if (selected === \"crystal\") {\n      text = `Selling ${this.prettify(crystal)} crystal for ${this.prettify(\n        metal\n      )} metal and ${this.prettify(deut)} deuterium`;\n    } else if (selected === \"metal\") {\n      text = `Selling ${this.prettify(metal)} metal for ${this.prettify(\n        deut\n      )} deuterium and ${this.prettify(crystal)} crystal`;\n    } else {\n      text = \"Nothing to sell yet\";\n    }\n    return text;\n  }\n}\n\nexport default PrintResult;\n","import Ogame from \"ogamejs\";\nimport React, { Component } from \"react\";\n\n/** Components import */\nimport Title from \"./components/Title\";\nimport RateText from \"./components/RateText\";\nimport RadioButton from \"./components/RadioButton\";\nimport TextInput from \"./components/TextInput\";\nimport PrintResult from \"./components/PrintResult\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      deut: 0,\n      metal: 0,\n      crystal: 0,\n      percentDeut: 0,\n      percentMetal: 60,\n      percentCrystal: 40,\n      selected: \"deut\",\n      rate: \"2:1.5:1\"\n    };\n  }\n\n  sellDeut() {\n    const { deut, percentMetal, percentCrystal, rate } = this.state;\n    const { metal, crystal } = Ogame.sellDeut(\n      deut,\n      percentMetal,\n      percentCrystal,\n      rate\n    );\n    this.setState({ metal, crystal });\n  }\n\n  sellMetal() {\n    const { metal, percentDeut, percentCrystal, rate } = this.state;\n    const { crystal, deut } = Ogame.sellMetal(\n      metal,\n      percentDeut,\n      percentCrystal,\n      rate\n    );\n    this.setState({ deut, crystal });\n  }\n\n  sellCrystal() {\n    const { crystal, percentDeut, percentMetal, rate } = this.state;\n    const { metal, deut } = Ogame.sellCrystal(\n      crystal,\n      percentDeut,\n      percentMetal,\n      rate\n    );\n    this.setState({ metal, deut });\n  }\n\n  printResult() {\n    if (this.state.selected === \"deut\") {\n      this.sellDeut();\n    } else if (this.state.selected === \"metal\") {\n      this.sellMetal();\n    } else if (this.state.selected === \"crystal\") {\n      this.sellCrystal();\n    }\n  }\n\n  handleOnChange(e, selected) {\n    if (e.target.checked) {\n      this.setState({ selected });\n    }\n  }\n\n  handleResourceChange(e, resource) {\n    const value = Number(e.target.value);\n    if (resource === \"deut\") {\n      this.setState({ deut: value }, this.printResult);\n    } else if (resource === \"metal\") {\n      this.setState({ metal: value }, this.printResult);\n    } else if (resource === \"crystal\") {\n      this.setState({ crystal: value }, this.printResult);\n    }\n  }\n\n  handleRateChange(e, resource) {\n    const value = e.target.value;\n    const split = this.state.rate.split(\":\");\n    let deut = split[2];\n    let metal = split[0];\n    let crystal = split[1];\n    let rate = `${metal}:${crystal}:${deut}`;\n\n    if (resource === \"deut\") {\n      rate = `${metal}:${crystal}:${value}`;\n    } else if (resource === \"metal\") {\n      rate = `${value}:${crystal}:${deut}`;\n    } else if (resource === \"crystal\") {\n      rate = `${metal}:${value}:${deut}`;\n    }\n    console.log(rate);\n    this.setState({ rate }, this.printResult);\n  }\n\n  handlePercentChange(e, resource) {\n    const value = Number(e.target.value);\n    if (resource === \"deut\") {\n      this.setState({ percentDeut: value }, this.printResult);\n    } else if (resource === \"metal\") {\n      this.setState({ percentMetal: value }, this.printResult);\n    } else if (resource === \"crystal\") {\n      this.setState({ percentCrystal: value }, this.printResult);\n    }\n  }\n\n  getRate(resource) {\n    const split = this.state.rate.split(\":\");\n    let deut = split[2];\n    let metal = split[0];\n    let crystal = split[1];\n    if (resource === \"deut\") {\n      return deut;\n    } else if (resource === \"metal\") {\n      return metal;\n    } else if (resource === \"crystal\") {\n      return crystal;\n    }\n  }\n\n  getPercent(resource) {\n    const { percentCrystal, percentDeut, percentMetal } = this.state;\n    if (resource === \"deut\") {\n      return {\n        percentMetal,\n        percentCrystal,\n        percentDeut: 0\n      };\n    } else if (resource === \"metal\") {\n      return {\n        percentMetal: 0,\n        percentCrystal,\n        percentDeut\n      };\n    } else if (resource === \"crystal\") {\n      return {\n        percentMetal,\n        percentCrystal: 0,\n        percentDeut\n      };\n    }\n  }\n\n  isSelected(value) {\n    return value === this.state.selected;\n  }\n\n  render() {\n    const { metal, crystal, deut, selected, rate } = this.state;\n    const { percentMetal, percentCrystal, percentDeut } = this.getPercent(\n      selected\n    );\n    return (\n      <div className=\"container container-fluid\">\n        <div className=\"col-xs-12\">\n          <div className=\"text-center\">\n            <Title />\n            <hr />\n          </div>\n\n          {/* SELECT RESSOURCE TO TRADE */}\n          <div className=\"col-xs-6\">\n            <h4>Resources to trade</h4>\n            <RadioButton\n              id=\"metal\"\n              text=\"metal\"\n              value=\"selected\"\n              checked={this.isSelected(\"metal\")}\n              onChange={e => this.handleOnChange(e, \"metal\")}\n            />\n            <RadioButton\n              id=\"crystal\"\n              text=\"crystal\"\n              value=\"selected\"\n              checked={this.isSelected(\"crystal\")}\n              onChange={e => this.handleOnChange(e, \"crystal\")}\n            />\n            <RadioButton\n              id=\"deut\"\n              text=\"deut\"\n              value=\"selected\"\n              checked={this.isSelected(\"deut\")}\n              onChange={e => this.handleOnChange(e, \"deut\")}\n            />\n          </div>\n\n          {/* CHANGE RATES */}\n          <div className=\"col-xs-6\">\n            <div className=\"col-xs-4\">\n              metal\n              <TextInput\n                value={this.getRate(\"metal\")}\n                onChange={e => this.handleRateChange(e, \"metal\")}\n                placeholder=\"metal\"\n              />\n            </div>\n            <div className=\"col-xs-4\">\n              crystal\n              <TextInput\n                value={this.getRate(\"crystal\")}\n                onChange={e => this.handleRateChange(e, \"crystal\")}\n                placeholder=\"crystal\"\n              />\n            </div>\n            <div className=\"col-xs-4\">\n              deuterium\n              <TextInput\n                value={this.getRate(\"deut\")}\n                onChange={e => this.handleRateChange(e, \"deut\")}\n                placeholder=\"deut\"\n              />\n            </div>\n\n            {/* CHANGE PERCENT */}\n            <div className=\"col-xs-12\">\n              <hr />\n              <div className=\"col-xs-4\">\n                %metal\n                <TextInput\n                  value={percentMetal}\n                  onChange={e => this.handlePercentChange(e, \"metal\")}\n                  placeholder=\"metal\"\n                />\n              </div>\n              <div className=\"col-xs-4\">\n                %crystal\n                <TextInput\n                  value={percentCrystal}\n                  onChange={e => this.handlePercentChange(e, \"crystal\")}\n                  placeholder=\"crystal\"\n                />\n              </div>\n              <div className=\"col-xs-4\">\n                %deut\n                <TextInput\n                  value={percentDeut}\n                  onChange={e => this.handlePercentChange(e, \"deut\")}\n                  placeholder=\"deut\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* CHANGE RESOURCES TO TRADE */}\n          <div className=\"col-xs-12\">\n            <hr />\n            <h4>Resources</h4>\n            <div className=\"col-xs-4\">\n              <TextInput\n                value={deut}\n                onChange={e => this.handleResourceChange(e, \"deut\")}\n                placeholder=\"deut\"\n              />\n            </div>\n            <div className=\"col-xs-4\">\n              <TextInput\n                value={metal}\n                onChange={e => this.handleResourceChange(e, \"metal\")}\n                placeholder=\"metal\"\n              />\n            </div>\n            <div className=\"col-xs-4\">\n              <TextInput\n                value={crystal}\n                onChange={e => this.handleResourceChange(e, \"crystal\")}\n                placeholder=\"crystal\"\n              />\n            </div>\n          </div>\n\n          {/* PRINT THE RESULT */}\n          <div className=\"col-xs-12\">\n            <div className=\"text-center\">\n              <hr />\n              <p>\n                <PrintResult\n                  deut={deut}\n                  metal={metal}\n                  crystal={crystal}\n                  selected={selected}\n                />\n              </p>\n              <p>\n                <RateText rate={rate} selected={selected} />\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}