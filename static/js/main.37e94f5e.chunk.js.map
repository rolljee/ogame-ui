{"version":3,"sources":["components/constants.js","components/DefaultRates.js","components/Layout.js","components/NumberInput.js","components/Percents.js","components/CopyButton.js","components/PrintResult.js","components/RatesInputs.js","components/RateText.js","components/Resources.js","components/Trades.js","App.js","serviceWorker.js","index.js"],"names":["BACKGROUND","RATES","rate","RESOURCES","crystal","deut","metal","DefaultRates","props","renderRates","bind","index","color","this","getActiveRate","className","key","onClick","setRate","map","React","Component","Layout","children","NumberInput","text","disabled","max","maxValue","min","onChange","placeholder","type","value","Percents","resources","name","resource","percent","isCurrentRessource","e","handlePercentChange","renderRadio","CopyButton","handleOnClick","copy","PrintResult","x","toString","replace","metalText","crystalText","deutText","selected","prettify","getText","Fragment","RateInputs","id","current","handleRateChange","getRate","renderInput","RateText","Ogame","Trader","parseRate","rateMetal","rateCrystal","rateDeut","Resources","displayName","renderResources","isNotCurrentResource","handleResourceChange","Trades","getActiveTrade","handleOnChange","renderLabel","App","state","background","percentCrystal","percentDeut","percentMetal","setBackground","sellDeut","setState","sellMetal","sellCrystal","Number","target","printResult","split","modifiedResource","currentResource","roundValue","roundToHundred","selectedRate","trade","getPercent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37e94f5e.chunk.js","sourcesContent":["export const BACKGROUND = {\n\tlight: 'light',\n\tdark: 'dark',\n};\n\nexport const RATES = [\n\t{\n\t\trate: '2.5:1.6:1',\n\t},\n\t{\n\t\trate: '2:1.5:1',\n\t},\n\t{\n\t\trate: '1.8:1.4:1',\n\t},\n];\n\nexport const RESOURCES = {\n\tcrystal: 'crystal',\n\tdeut: 'deut',\n\tmetal: 'metal',\n};\n","import React from 'react';\nimport { RATES } from './constants';\n\nclass DefaultRates extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderRates = this.renderRates.bind(this);\n\t}\n\trenderRates({ rate }, index) {\n\t\tconst color = this.props.getActiveRate(rate);\n\t\treturn (\n\t\t\t<span className=\"margin-right-sm\" key={index}>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.props.setRate(rate)}\n\t\t\t\t\tclassName={`btn label label-${color} clickable`}>\n\t\t\t\t\t{rate}\n\t\t\t\t</button>\n\t\t\t</span>\n\t\t);\n\t}\n\trender() {\n\t\treturn RATES.map((rate, index) => this.renderRates(rate, index));\n\t}\n}\n\nexport default DefaultRates;\n","import React from 'react';\n\nclass Layout extends React.Component {\n\trender() {\n\t\tconst { children } = this.props;\n\t\treturn (\n\t\t\t<div className=\"container-fluid full-height\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"col-xs-12\">{children}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Layout;\n","import React from 'react';\n\nclass NumberInput extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"input-group\">\n\t\t\t\t<span className=\"input-group-addon\">{this.props.text}</span>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"form-control input-xs\"\n\t\t\t\t\tdisabled={this.props.disabled ? 'disabled' : ''}\n\t\t\t\t\tmax={this.props.maxValue}\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NumberInput;\n","import React from 'react';\nimport NumberIntput from './NumberInput';\nimport { RESOURCES } from './constants';\n\nclass Percents extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.resources = [\n\t\t\t{\n\t\t\t\tname: '%metal',\n\t\t\t\tmaxValue: 100,\n\t\t\t\tresource: RESOURCES.metal,\n\t\t\t\tpercent: 'percentMetal',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: '%crystal',\n\t\t\t\tmaxValue: 100,\n\t\t\t\tresource: RESOURCES.crystal,\n\t\t\t\tpercent: 'percentCrystal',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: '%deut',\n\t\t\t\tmaxValue: 100,\n\t\t\t\tresource: RESOURCES.deut,\n\t\t\t\tpercent: 'percentDeut',\n\t\t\t},\n\t\t];\n\t}\n\trenderRadio({ resource, name, maxValue, percent }, index) {\n\t\treturn (\n\t\t\t<div className=\"col-md-4 col-sm-4 col-xs-12\" key={index}>\n\t\t\t\t<NumberIntput\n\t\t\t\t\ttext={name}\n\t\t\t\t\tdisabled={this.props.isCurrentRessource(resource)}\n\t\t\t\t\tmaxValue={maxValue}\n\t\t\t\t\tonChange={e => this.props.handlePercentChange(e, resource)}\n\t\t\t\t\tplaceholder={resource}\n\t\t\t\t\tvalue={this.props[percent]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\trender() {\n\t\treturn this.resources.map((resource, index) =>\n\t\t\tthis.renderRadio(resource, index),\n\t\t);\n\t}\n}\n\nexport default Percents;\n","import React from 'react';\nimport copy from 'copy-to-clipboard';\n\nclass CopyButton extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleOnClick = this.handleOnClick.bind(this);\n\t}\n\n\thandleOnClick() {\n\t\tcopy(this.props.text);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<button onClick={this.handleOnClick} className=\"btn btn-default\">\n\t\t\t\tCopy\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default CopyButton;\n","import React from 'react';\nimport CopyButton from './CopyButton';\nimport { RESOURCES } from './constants';\n\nclass PrintResult extends React.Component {\n\tprettify(x) {\n\t\treturn x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n\t}\n\tgetText(metalText, crystalText, deutText, selected) {\n\t\tlet text = '';\n\t\tif (selected === RESOURCES.deut) {\n\t\t\ttext = `Trade:\\n${deutText} deut\\n\\nAgainst:\\n${metalText} metal\\n${crystalText} crystal`;\n\t\t} else if (selected === RESOURCES.crystal) {\n\t\t\ttext = `Trade:\\n${crystalText} crystal\\n\\nAgainst:\\n${metalText} metal\\n${deutText} deut`;\n\t\t} else if (selected === RESOURCES.metal) {\n\t\t\ttext = `Trade:\\n${metalText} metal\\n\\nAgainst:\\n${deutText} deut\\n${crystalText} crystal`;\n\t\t} else {\n\t\t\ttext = 'Nothing to sell yet';\n\t\t}\n\n\t\treturn text;\n\t}\n\trender() {\n\t\tconst { metal, crystal, deut, selected } = this.props;\n\t\tconst deutText = this.prettify(deut);\n\t\tconst metalText = this.prettify(metal);\n\t\tconst crystalText = this.prettify(crystal);\n\t\tconst text = this.getText(metalText, crystalText, deutText, selected);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\tdeut: {deutText} metal: {metalText} crystal: {crystalText}\n\t\t\t\t<div className=\"margin-top\">\n\t\t\t\t\t<CopyButton text={text} />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PrintResult;\n","import React from 'react';\nimport NumberIntput from './NumberInput';\nimport { RESOURCES } from './constants';\n\nclass RateInputs extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.resources = [\n\t\t\t{ id: RESOURCES.metal },\n\t\t\t{ id: RESOURCES.crystal },\n\t\t\t{ id: RESOURCES.deut },\n\t\t];\n\t}\n\n\trenderInput(resource, index) {\n\t\tconst current = RESOURCES[resource.id];\n\t\treturn (\n\t\t\t<div className=\"col-md-4 col-sm-4 col-xs-12\" key={index}>\n\t\t\t\t<NumberIntput\n\t\t\t\t\ttext={current}\n\t\t\t\t\tonChange={e => this.props.handleRateChange(e, current)}\n\t\t\t\t\tplaceholder={current}\n\t\t\t\t\tvalue={this.props.getRate(current)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn this.resources.map((resource, index) =>\n\t\t\tthis.renderInput(resource, index),\n\t\t);\n\t}\n}\n\nexport default RateInputs;\n","import React from \"react\";\nimport Ogame from \"ogamejs\";\n\nclass RateText extends React.Component {\n  render() {\n    const { rate, selected } = this.props;\n    const { rateMetal, rateCrystal, rateDeut } = Ogame.Trader.parseRate(\n      rate,\n      selected\n    );\n    if (selected === \"deut\") {\n      return `${rateDeut} deut = ${rateMetal} metal and ${rateCrystal} crystal`;\n    } else if (selected === \"metal\") {\n      return `${rateMetal} metal = ${rateDeut} deut and ${rateCrystal} crystal`;\n    } else if (selected === \"crystal\") {\n      return `${rateCrystal} crystal = ${rateDeut} deut and ${rateMetal} metal`;\n    } else {\n      return \"Nothing selected\";\n    }\n  }\n}\n\nexport default RateText;\n","import React from 'react';\nimport NumberIntput from './NumberInput';\nimport { RESOURCES } from './constants';\n\nclass Resources extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.resources = [\n\t\t\t{\n\t\t\t\tdisplayName: 'Metal',\n\t\t\t\tname: RESOURCES.metal,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Crystal',\n\t\t\t\tname: RESOURCES.crystal,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Deut',\n\t\t\t\tname: RESOURCES.deut,\n\t\t\t},\n\t\t];\n\t\tthis.renderResources = this.renderResources.bind(this);\n\t}\n\trenderResources(resource, index) {\n\t\treturn (\n\t\t\t<div className=\"col-md-4 col-sm-4 col-xs-12\" key={index}>\n\t\t\t\t<NumberIntput\n\t\t\t\t\tdisabled={this.props.isNotCurrentResource(resource.name)}\n\t\t\t\t\tonChange={e => this.props.handleResourceChange(e, resource.name)}\n\t\t\t\t\tplaceholder={resource.name}\n\t\t\t\t\ttext={resource.displayName}\n\t\t\t\t\tvalue={this.props[resource.name]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\trender() {\n\t\treturn this.resources.map((resource, index) =>\n\t\t\tthis.renderResources(resource, index),\n\t\t);\n\t}\n}\n\nexport default Resources;\n","import React from 'react';\nimport { RESOURCES } from './constants';\n\nclass Trades extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.resources = [\n\t\t\t{ id: RESOURCES.metal },\n\t\t\t{ id: RESOURCES.crystal },\n\t\t\t{ id: RESOURCES.deut },\n\t\t];\n\t}\n\trenderLabel(resource, index) {\n\t\tconst current = RESOURCES[resource.id];\n\t\tconst color = this.props.getActiveTrade(current);\n\t\treturn (\n\t\t\t<span className=\"margin-right-sm\" key={index}>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.props.handleOnChange(current)}\n\t\t\t\t\tclassName={`btn btn-lg label label-${color} clickable`}>\n\t\t\t\t\t{current}\n\t\t\t\t</button>\n\t\t\t</span>\n\t\t);\n\t}\n\trender() {\n\t\treturn this.resources.map((resource, index) =>\n\t\t\tthis.renderLabel(resource, index),\n\t\t);\n\t}\n}\n\nexport default Trades;\n","import Ogame from 'ogamejs';\nimport React, { Component } from 'react';\n\n/** Components import */\nimport { BACKGROUND, RESOURCES } from './components/constants';\nimport DefaultRates from './components/DefaultRates';\nimport Layout from './components/Layout';\nimport Percents from './components/Percents';\nimport PrintResult from './components/PrintResult';\nimport RateInputs from './components/RatesInputs';\nimport RateText from './components/RateText';\nimport Resources from './components/Resources';\nimport Trades from './components/Trades';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tbackground: BACKGROUND.dark,\n\t\t\tcrystal: 0,\n\t\t\tdeut: 0,\n\t\t\tmetal: 0,\n\t\t\tpercentCrystal: 40,\n\t\t\tpercentDeut: 0,\n\t\t\tpercentMetal: 60,\n\t\t\trate: '2:1.5:1',\n\t\t\tselected: RESOURCES.deut,\n\t\t};\n\n\t\tthis.getActiveRate = this.getActiveRate.bind(this);\n\t\tthis.getRate = this.getRate.bind(this);\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\n\t\tthis.getActiveTrade = this.getActiveTrade.bind(this);\n\t\tthis.handlePercentChange = this.handlePercentChange.bind(this);\n\t\tthis.handleRateChange = this.handleRateChange.bind(this);\n\t\tthis.handleResourceChange = this.handleResourceChange.bind(this);\n\t\tthis.handleResourceChange = this.handleResourceChange.bind(this);\n\t\tthis.isCurrentRessource = this.isCurrentRessource.bind(this);\n\t\tthis.isNotCurrentResource = this.isNotCurrentResource.bind(this);\n\t\tthis.setBackground = this.setBackground.bind(this);\n\t\tthis.setRate = this.setRate.bind(this);\n\t}\n\n\tsellDeut() {\n\t\tconst { deut, percentMetal, percentCrystal, rate } = this.state;\n\t\tconst { metal, crystal } = Ogame.Trader.sellDeut(\n\t\t\tdeut,\n\t\t\tpercentMetal,\n\t\t\tpercentCrystal,\n\t\t\trate,\n\t\t);\n\t\tthis.setState({ metal, crystal });\n\t}\n\n\tsellMetal() {\n\t\tconst { metal, percentDeut, percentCrystal, rate } = this.state;\n\t\tconst { crystal, deut } = Ogame.Trader.sellMetal(\n\t\t\tmetal,\n\t\t\tpercentDeut,\n\t\t\tpercentCrystal,\n\t\t\trate,\n\t\t);\n\t\tthis.setState({ deut, crystal });\n\t}\n\n\tsellCrystal() {\n\t\tconst { crystal, percentDeut, percentMetal, rate } = this.state;\n\t\tconst { metal, deut } = Ogame.Trader.sellCrystal(\n\t\t\tcrystal,\n\t\t\tpercentDeut,\n\t\t\tpercentMetal,\n\t\t\trate,\n\t\t);\n\t\tthis.setState({ metal, deut });\n\t}\n\n\tprintResult() {\n\t\tif (this.state.selected === RESOURCES.deut) {\n\t\t\tthis.sellDeut();\n\t\t} else if (this.state.selected === RESOURCES.metal) {\n\t\t\tthis.sellMetal();\n\t\t} else if (this.state.selected === RESOURCES.crystal) {\n\t\t\tthis.sellCrystal();\n\t\t}\n\t}\n\n\thandleOnChange(selected) {\n\t\tthis.setState({ selected });\n\t}\n\n\thandleResourceChange(e, resource) {\n\t\tconst value = Number(e.target.value);\n\t\tif (resource === RESOURCES.deut) {\n\t\t\tthis.setState({ deut: value }, this.printResult);\n\t\t} else if (resource === RESOURCES.metal) {\n\t\t\tthis.setState({ metal: value }, this.printResult);\n\t\t} else if (resource === RESOURCES.crystal) {\n\t\t\tthis.setState({ crystal: value }, this.printResult);\n\t\t}\n\t}\n\n\thandleRateChange(e, resource) {\n\t\tconst value = e.target.value;\n\t\tconst split = this.state.rate.split(':');\n\t\tlet deut = split[2];\n\t\tlet metal = split[0];\n\t\tlet crystal = split[1];\n\t\tlet rate = `${metal}:${crystal}:${deut}`;\n\n\t\tif (resource === RESOURCES.deut) {\n\t\t\trate = `${metal}:${crystal}:${value}`;\n\t\t} else if (resource === RESOURCES.metal) {\n\t\t\trate = `${value}:${crystal}:${deut}`;\n\t\t} else if (resource === RESOURCES.crystal) {\n\t\t\trate = `${metal}:${value}:${deut}`;\n\t\t}\n\t\tthis.setState({ rate }, this.printResult);\n\t}\n\n\troundToHundred(percent, modifiedResource) {\n\t\tconst currentResource = this.state.selected;\n\t\tif (\n\t\t\tcurrentResource === RESOURCES.deut &&\n\t\t\tmodifiedResource === RESOURCES.metal\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentCrystal: 100 - percent,\n\t\t\t};\n\t\t} else if (\n\t\t\tcurrentResource === RESOURCES.deut &&\n\t\t\tmodifiedResource === RESOURCES.crystal\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentMetal: 100 - percent,\n\t\t\t};\n\t\t} else if (\n\t\t\tcurrentResource === RESOURCES.metal &&\n\t\t\tmodifiedResource === RESOURCES.deut\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentCrystal: 100 - percent,\n\t\t\t};\n\t\t} else if (\n\t\t\tcurrentResource === RESOURCES.metal &&\n\t\t\tmodifiedResource === RESOURCES.crystal\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentDeut: 100 - percent,\n\t\t\t};\n\t\t} else if (\n\t\t\tcurrentResource === RESOURCES.crystal &&\n\t\t\tmodifiedResource === RESOURCES.metal\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentDeut: 100 - percent,\n\t\t\t};\n\t\t} else if (\n\t\t\tcurrentResource === RESOURCES.crystal &&\n\t\t\tmodifiedResource === RESOURCES.deut\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentMetal: 100 - percent,\n\t\t\t};\n\t\t}\n\t}\n\n\thandlePercentChange(e, resource) {\n\t\tconst percent = this.roundValue(Number(e.target.value));\n\n\t\tif (resource === RESOURCES.deut) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tpercentDeut: percent,\n\t\t\t\t\t...this.roundToHundred(percent, RESOURCES.deut),\n\t\t\t\t},\n\t\t\t\tthis.printResult,\n\t\t\t);\n\t\t} else if (resource === RESOURCES.metal) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tpercentMetal: percent,\n\t\t\t\t\t...this.roundToHundred(percent, RESOURCES.metal),\n\t\t\t\t},\n\t\t\t\tthis.printResult,\n\t\t\t);\n\t\t} else if (resource === RESOURCES.crystal) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tpercentCrystal: percent,\n\t\t\t\t\t...this.roundToHundred(percent, RESOURCES.crystal),\n\t\t\t\t},\n\t\t\t\tthis.printResult,\n\t\t\t);\n\t\t}\n\t}\n\n\tgetRate(resource) {\n\t\tconst split = this.state.rate.split(':');\n\t\tlet deut = split[2];\n\t\tlet metal = split[0];\n\t\tlet crystal = split[1];\n\t\tif (resource === RESOURCES.deut) {\n\t\t\treturn deut;\n\t\t} else if (resource === RESOURCES.metal) {\n\t\t\treturn metal;\n\t\t} else if (resource === RESOURCES.crystal) {\n\t\t\treturn crystal;\n\t\t}\n\t}\n\n\tgetActiveRate(selectedRate) {\n\t\tconst { rate } = this.state;\n\t\tconst isActive = selectedRate === rate;\n\n\t\treturn isActive ? 'info' : 'default';\n\t}\n\n\tgetActiveTrade(trade) {\n\t\tconst { selected } = this.state;\n\t\tconst isActive = trade === selected;\n\n\t\treturn isActive ? 'info' : 'default';\n\t}\n\n\tsetRate(selectedRate) {\n\t\tthis.setState({ rate: selectedRate });\n\t}\n\n\tgetPercent(resource) {\n\t\tconst { percentCrystal, percentDeut, percentMetal } = this.state;\n\t\tlet deut = this.roundValue(percentDeut);\n\t\tlet metal = this.roundValue(percentMetal);\n\t\tlet crystal = this.roundValue(percentCrystal);\n\n\t\tif (resource === RESOURCES.deut) {\n\t\t\treturn {\n\t\t\t\tpercentCrystal: crystal,\n\t\t\t\tpercentDeut: 0,\n\t\t\t\tpercentMetal: metal,\n\t\t\t};\n\t\t} else if (resource === RESOURCES.metal) {\n\t\t\treturn {\n\t\t\t\tpercentCrystal: crystal,\n\t\t\t\tpercentDeut: deut,\n\t\t\t\tpercentMetal: 0,\n\t\t\t};\n\t\t} else if (resource === RESOURCES.crystal) {\n\t\t\treturn {\n\t\t\t\tpercentCrystal: 0,\n\t\t\t\tpercentDeut: deut,\n\t\t\t\tpercentMetal: metal,\n\t\t\t};\n\t\t}\n\t}\n\n\tisCurrentRessource(value) {\n\t\treturn value === this.state.selected;\n\t}\n\n\tisNotCurrentResource(resource) {\n\t\treturn this.state.selected !== resource;\n\t}\n\n\troundValue(percent) {\n\t\tif (percent > 100) {\n\t\t\treturn 100;\n\t\t}\n\n\t\treturn percent;\n\t}\n\n\tsetBackground() {\n\t\tthis.setState({\n\t\t\tbackground:\n\t\t\t\tthis.state.background === BACKGROUND.light\n\t\t\t\t\t? BACKGROUND.dark\n\t\t\t\t\t: BACKGROUND.light,\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { metal, crystal, deut, selected, rate, background } = this.state;\n\t\tconst { percentMetal, percentCrystal, percentDeut } = this.getPercent(\n\t\t\tselected,\n\t\t);\n\t\treturn (\n\t\t\t<Layout background={background} setBackground={this.setBackground}>\n\t\t\t\t<div className=\"col-sm-12\">\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t<h6 className=\"margin-top text-white\">Select ressource</h6>\n\t\t\t\t\t\t<div className=\"margin-bottom\">\n\t\t\t\t\t\t\t<Trades\n\t\t\t\t\t\t\t\thandleOnChange={this.handleOnChange}\n\t\t\t\t\t\t\t\tgetActiveTrade={this.getActiveTrade}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm-12\">\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h6 className=\"margin-top text-white\">Rates</h6>\n\t\t\t\t\t<div className=\"text-center margin-bottom\">\n\t\t\t\t\t\t<DefaultRates\n\t\t\t\t\t\t\tgetActiveRate={this.getActiveRate}\n\t\t\t\t\t\t\tsetRate={this.setRate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<RateInputs\n\t\t\t\t\t\tgetRate={this.getRate}\n\t\t\t\t\t\thandleRateChange={this.handleRateChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-sm-12\">\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h6 className=\"margin-top text-white\">Percents</h6>\n\t\t\t\t\t<Percents\n\t\t\t\t\t\thandlePercentChange={this.handlePercentChange}\n\t\t\t\t\t\tisCurrentRessource={this.isCurrentRessource}\n\t\t\t\t\t\tpercentCrystal={percentCrystal}\n\t\t\t\t\t\tpercentDeut={percentDeut}\n\t\t\t\t\t\tpercentMetal={percentMetal}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-sm-12\">\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h6 className=\"margin-top text-white\">Resources</h6>\n\t\t\t\t\t<p className={`text-center text-white`}>\n\t\t\t\t\t\t<RateText rate={rate} selected={selected} />\n\t\t\t\t\t</p>\n\t\t\t\t\t<Resources\n\t\t\t\t\t\tcrystal={crystal}\n\t\t\t\t\t\tdeut={deut}\n\t\t\t\t\t\thandleResourceChange={this.handleResourceChange}\n\t\t\t\t\t\tisNotCurrentResource={this.isNotCurrentResource}\n\t\t\t\t\t\tmetal={metal}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={`col-sm-12 margin-top text-white text-center`}>\n\t\t\t\t\t<PrintResult\n\t\t\t\t\t\tdeut={deut}\n\t\t\t\t\t\tmetal={metal}\n\t\t\t\t\t\tcrystal={crystal}\n\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}