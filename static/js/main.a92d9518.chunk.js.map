{"version":3,"sources":["components/constants.js","Home.js","Trader/components/DefaultRates.js","Trader/components/NumberInput.js","Trader/components/Percents.js","Trader/components/CopyButton.js","Trader/components/PrintResult.js","Trader/components/RatesInputs.js","Trader/components/RateText.js","Trader/components/Resources.js","Trader/components/Trades.js","Trader/Trader.js","Players/components/PlayersStatus.js","Players/components/PlayerDetails.js","Players/Players.js","App.js","serviceWorker.js","index.js"],"names":["CORSPROXY","POSITIONS","0","1","2","3","4","5","6","7","RATES","rate","RESOURCES","crystal","deut","metal","STATUS","A","a","v","i","I","b","o","ROUTES","header","title","text","route","available","Home","Row","map","index","Col","key","Card","bg","style","width","height","className","Body","Button","variant","href","icon","faExternalLinkAlt","Title","Text","React","Component","DefaultRates","props","renderRates","bind","color","this","getActiveRate","onClick","setRate","NumberInput","InputGroup","Prepend","id","FormControl","aria-label","input","aria-describedby","disabled","max","maxValue","min","onChange","placeholder","type","value","Percents","resources","name","resource","percent","isCurrentRessource","e","handlePercentChange","renderInputs","CopyButton","handleOnClick","copy","PrintResult","x","toString","replace","metalText","crystalText","deutText","selected","prettify","getText","RateInputs","current","handleRateChange","getRate","RateText","Ogame","Trader","parseRate","rateMetal","rateCrystal","rateDeut","Resources","displayName","isNotCurrentResource","handleResourceChange","Trades","getActiveTrade","handleOnChange","renderLabel","state","percentCrystal","percentDeut","percentMetal","sellDeut","setState","sellMetal","sellCrystal","Number","target","printResult","split","modifiedResource","currentResource","roundValue","roundToHundred","selectedRate","trade","getPercent","PlayersStatus","renderStatus","status","getActiveStatus","setActiveStatus","Object","keys","PlayersDetails","planets","positions","getPlayerData","universe","lang","player","url","fetch","response","xml","window","DOMParser","parseFromString","positionsXml","getElementsByTagName","planetsXml","position","getAttribute","score","push","typeLongName","planet","coords","galaxy","system","planetData","moon","size","console","error","Table","striped","bordered","hover","Players","players","show","search","handleClose","handleShow","handleSubmit","searchPlayers","event","currentTarget","result","FuzzySearch","playersXml","preventDefault","stopPropagation","searchPlayer","includes","selectedStatus","filter","s","length","refreshPlayers","statusRegex","RegExp","join","playerRegex","test","exec","sm","Form","onSubmit","xs","Control","defaultValue","Modal","onHide","animation","Header","closeButton","App","basename","process","Navbar","Nav","to","Container","fluid","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a92d9518.chunk.js","sourcesContent":["export const BACKGROUND = {\n\tlight: 'light',\n\tdark: 'dark',\n};\n\nexport const CORSPROXY = \"https://api.codetabs.com/v1/proxy?quest=\";\n\nexport const POSITIONS = {\n\t0: 'All',\n\t1: \"Economy\",\n\t2: \"Research\",\n\t3: \"Military\",\n\t4: \"Military Built\",\n\t5: \"Military Destroyed\",\n\t6: \"Military Lost\",\n\t7: \"Honor\",\n}\n\nexport const RATES = [\n\t{\n\t\trate: '2.5:1.6:1',\n\t},\n\t{\n\t\trate: '2:1.5:1',\n\t},\n\t{\n\t\trate: '1.8:1.4:1',\n\t},\n];\n\nexport const RESOURCES = {\n\tcrystal: 'crystal',\n\tdeut: 'deut',\n\tmetal: 'metal',\n};\n\nexport const STATUS = {\n\tA: 'active', // GF take no status as an active player\n\ta: 'admin',\n\tv: 'vacancy',\n\ti: 'inactive',\n\tI: 'long inactive',\n\tb: 'banned',\n\to: 'outlaw'\n}\n\nexport const ROUTES = [\n\t{\n\t\theader: 'Trades',\n\t\ttitle: 'Trades resources',\n\t\ttext: 'Get value of resources to sell your resource',\n\t\troute: 'trades',\n\t\tavailable: true\n\t},\n\t{\n\t\theader: 'Players',\n\t\ttitle: 'Players list',\n\t\ttext: 'Get players accross universes',\n\t\troute: 'players',\n\t\tavailable: true\n\t},\n\t{\n\t\theader: 'Market',\n\t\ttitle: 'Market resources calculator',\n\t\ttext: 'Get value of ship/resources for the market',\n\t\troute: 'market',\n\t\tavailable: false\n\t},\n\t{\n\t\theader: 'Mining',\n\t\ttitle: 'Building tool',\n\t\ttext: 'Get the production/cost of any building',\n\t\troute: 'mining',\n\t\tavailable: false\n\t},\n\t{\n\t\theader: 'Universes',\n\t\ttitle: 'Get universes informations',\n\t\ttext: 'Universes list and data',\n\t\troute: 'universes',\n\t\tavailable: false\n\t},\n\t{\n\t\theader: 'Scores',\n\t\ttitle: 'Get scores accross universes',\n\t\ttext: 'Scores military/mining etc.',\n\t\troute: 'score',\n\t\tavailable: false\n\t},\n\t{\n\t\theader: 'Alliances',\n\t\ttitle: 'Get alliances informations',\n\t\ttext: 'Alliances list and data accross universes',\n\t\troute: 'alliances',\n\t\tavailable: false\n\t},\n]\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport { ROUTES } from './components/constants';\n\nclass Home extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t{ROUTES.map((route, index) => (\n\t\t\t\t\t<Col key={index}>\n\t\t\t\t\t\t<Card bg='dark' text='white' style={{ width: '18rem', height: '10rem' }} className=\"m-3\" key={route.route}>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<span className=\"float-right\">\n\t\t\t\t\t\t\t\t\t{route.available ?\n\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"dark\" href={route.route}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faExternalLinkAlt} />\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t'comming soon'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t\t{route.title}\n\t\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t{route.text}\n\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t))\n\t\t\t\t}\n\t\t\t</Row>\n\t\t)\n\t}\n}\n\nexport default Home;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport { RATES } from '../../components/constants';\n\nclass DefaultRates extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderRates = this.renderRates.bind(this);\n\t}\n\trenderRates({ rate }, index) {\n\t\tconst color = this.props.getActiveRate(rate);\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tvariant={color}\n\t\t\t\tonClick={() => this.props.setRate(rate)}\n\t\t\t\tclassName={`margin-right-sm`} key={index}>\n\t\t\t\t{rate}\n\t\t\t</Button>\n\t\t);\n\t}\n\trender() {\n\t\treturn RATES.map((rate, index) => this.renderRates(rate, index));\n\t}\n}\n\nexport default DefaultRates;\n","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nclass NumberInput extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<InputGroup>\n\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t<InputGroup.Text id={`input-${this.props.text}`}>{this.props.text}</InputGroup.Text>\n\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t<FormControl\n\t\t\t\t\taria-label={this.props.input}\n\t\t\t\t\taria-describedby={`input-${this.props.text}`}\n\t\t\t\t\tdisabled={this.props.disabled ? 'disabled' : ''}\n\t\t\t\t\tmax={this.props.maxValue}\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t/>\n\t\t\t</InputGroup>\n\t\t);\n\t}\n}\n\nexport default NumberInput;\n","import React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport NumberIntput from './NumberInput';\nimport { RESOURCES } from '../../components/constants';\n\nclass Percents extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.resources = [\n\t\t\t{\n\t\t\t\tname: '%metal',\n\t\t\t\tmaxValue: 100,\n\t\t\t\tresource: RESOURCES.metal,\n\t\t\t\tpercent: 'percentMetal',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: '%crystal',\n\t\t\t\tmaxValue: 100,\n\t\t\t\tresource: RESOURCES.crystal,\n\t\t\t\tpercent: 'percentCrystal',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: '%deut',\n\t\t\t\tmaxValue: 100,\n\t\t\t\tresource: RESOURCES.deut,\n\t\t\t\tpercent: 'percentDeut',\n\t\t\t},\n\t\t];\n\t}\n\trenderInputs({ resource, name, maxValue, percent }, index) {\n\t\treturn (\n\t\t\t<Col key={index}>\n\t\t\t\t<NumberIntput\n\t\t\t\t\ttext={name}\n\t\t\t\t\tdisabled={this.props.isCurrentRessource(resource)}\n\t\t\t\t\tmaxValue={maxValue}\n\t\t\t\t\tonChange={e => this.props.handlePercentChange(e, resource)}\n\t\t\t\t\tplaceholder={resource}\n\t\t\t\t\tvalue={this.props[percent]}\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t{this.resources.map((resource, index) => this.renderInputs(resource, index))}\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default Percents;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport copy from 'copy-to-clipboard';\n\n\nclass CopyButton extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleOnClick = this.handleOnClick.bind(this);\n\t}\n\n\thandleOnClick() {\n\t\tcopy(this.props.text);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Button variant=\"light\" onClick={this.handleOnClick}>Copy</Button>\n\t\t);\n\t}\n}\n\nexport default CopyButton;\n","import React from 'react';\nimport CopyButton from './CopyButton';\nimport { RESOURCES } from '../../components/constants';\n\nclass PrintResult extends React.Component {\n\tprettify(x) {\n\t\treturn x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n\t}\n\tgetText(metalText, crystalText, deutText, selected) {\n\t\tlet text = '';\n\t\tif (selected === RESOURCES.deut) {\n\t\t\ttext = `Trade:\\n${deutText} deut\\n\\nAgainst:\\n${metalText} metal\\n${crystalText} crystal`;\n\t\t} else if (selected === RESOURCES.crystal) {\n\t\t\ttext = `Trade:\\n${crystalText} crystal\\n\\nAgainst:\\n${metalText} metal\\n${deutText} deut`;\n\t\t} else if (selected === RESOURCES.metal) {\n\t\t\ttext = `Trade:\\n${metalText} metal\\n\\nAgainst:\\n${deutText} deut\\n${crystalText} crystal`;\n\t\t} else {\n\t\t\ttext = 'Nothing to sell yet';\n\t\t}\n\n\t\treturn text;\n\t}\n\trender() {\n\t\tconst { metal, crystal, deut, selected } = this.props;\n\t\tconst deutText = this.prettify(deut);\n\t\tconst metalText = this.prettify(metal);\n\t\tconst crystalText = this.prettify(crystal);\n\t\tconst text = this.getText(metalText, crystalText, deutText, selected);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\tdeut: {deutText} metal: {metalText} crystal: {crystalText}\n\t\t\t\t<div className=\"margin-top\">\n\t\t\t\t\t<CopyButton text={text} />\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default PrintResult;\n","import React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport NumberIntput from './NumberInput';\nimport { RESOURCES } from '../../components/constants';\n\nclass RateInputs extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.resources = [\n\t\t\t{ id: RESOURCES.metal },\n\t\t\t{ id: RESOURCES.crystal },\n\t\t\t{ id: RESOURCES.deut },\n\t\t];\n\t}\n\n\trenderInputs(resource, index) {\n\t\tconst current = RESOURCES[resource.id];\n\t\treturn (\n\t\t\t<Col key={index}>\n\t\t\t\t<NumberIntput\n\t\t\t\t\ttext={current}\n\t\t\t\t\tonChange={e => this.props.handleRateChange(e, current)}\n\t\t\t\t\tplaceholder={current}\n\t\t\t\t\tvalue={this.props.getRate(current)}\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t{this.resources.map((resource, index) => this.renderInputs(resource, index))}\n\t\t\t</Row>\n\t\t)\n\t}\n}\n\nexport default RateInputs;\n","import React from \"react\";\nimport Ogame from \"ogamejs\";\n\nclass RateText extends React.Component {\n  render() {\n    const { rate, selected } = this.props;\n    const { rateMetal, rateCrystal, rateDeut } = Ogame.Trader.parseRate(\n      rate,\n      selected\n    );\n    if (selected === \"deut\") {\n      return `${rateDeut} deut = ${rateMetal} metal and ${rateCrystal} crystal`;\n    } else if (selected === \"metal\") {\n      return `${rateMetal} metal = ${rateDeut} deut and ${rateCrystal} crystal`;\n    } else if (selected === \"crystal\") {\n      return `${rateCrystal} crystal = ${rateDeut} deut and ${rateMetal} metal`;\n    } else {\n      return \"Nothing selected\";\n    }\n  }\n}\n\nexport default RateText;\n","import React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport NumberIntput from './NumberInput';\nimport { RESOURCES } from '../../components/constants';\n\nclass Resources extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.resources = [\n\t\t\t{\n\t\t\t\tdisplayName: 'Metal',\n\t\t\t\tname: RESOURCES.metal,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Crystal',\n\t\t\t\tname: RESOURCES.crystal,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Deut',\n\t\t\t\tname: RESOURCES.deut,\n\t\t\t},\n\t\t];\n\t}\n\trenderInputs(resource, index) {\n\t\treturn (\n\t\t\t<Col key={index}>\n\t\t\t\t<NumberIntput\n\t\t\t\t\tdisabled={this.props.isNotCurrentResource(resource.name)}\n\t\t\t\t\tonChange={e => this.props.handleResourceChange(e, resource.name)}\n\t\t\t\t\tplaceholder={resource.name}\n\t\t\t\t\ttext={resource.displayName}\n\t\t\t\t\tvalue={this.props[resource.name]}\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t{this.resources.map((resource, index) => this.renderInputs(resource, index))}\n\t\t\t</Row>\n\t\t)\n\t}\n}\n\nexport default Resources;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport { RESOURCES } from '../../components/constants';\n\nclass Trades extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.resources = [\n\t\t\t{ id: RESOURCES.metal },\n\t\t\t{ id: RESOURCES.crystal },\n\t\t\t{ id: RESOURCES.deut },\n\t\t];\n\t}\n\trenderLabel(resource, index) {\n\t\tconst current = RESOURCES[resource.id];\n\t\tconst color = this.props.getActiveTrade(current);\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tvariant={color}\n\t\t\t\tonClick={() => this.props.handleOnChange(current)}\n\t\t\t\tclassName={`margin-right-sm`} key={index}>\n\t\t\t\t{current}\n\t\t\t</Button>\n\t\t);\n\t}\n\trender() {\n\t\treturn this.resources.map((resource, index) =>\n\t\t\tthis.renderLabel(resource, index),\n\t\t);\n\t}\n}\n\nexport default Trades;\n","import React from 'react';\nimport Ogame from 'ogamejs';\nimport Col from 'react-bootstrap/Col';\n\nimport DefaultRates from './components/DefaultRates';\nimport Percents from './components/Percents';\nimport PrintResult from './components/PrintResult';\nimport RateInputs from './components/RatesInputs';\nimport RateText from './components/RateText';\nimport Resources from './components/Resources';\nimport Trades from './components/Trades';\nimport { RESOURCES } from '../components/constants';\n\nclass Trader extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tcrystal: 0,\n\t\t\tdeut: 0,\n\t\t\tmetal: 0,\n\t\t\tpercentCrystal: 40,\n\t\t\tpercentDeut: 0,\n\t\t\tpercentMetal: 60,\n\t\t\trate: '2:1.5:1',\n\t\t\tselected: RESOURCES.deut,\n\t\t};\n\n\t\tthis.getActiveRate = this.getActiveRate.bind(this);\n\t\tthis.getRate = this.getRate.bind(this);\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\n\t\tthis.getActiveTrade = this.getActiveTrade.bind(this);\n\t\tthis.handlePercentChange = this.handlePercentChange.bind(this);\n\t\tthis.handleRateChange = this.handleRateChange.bind(this);\n\t\tthis.handleResourceChange = this.handleResourceChange.bind(this);\n\t\tthis.handleResourceChange = this.handleResourceChange.bind(this);\n\t\tthis.isCurrentRessource = this.isCurrentRessource.bind(this);\n\t\tthis.isNotCurrentResource = this.isNotCurrentResource.bind(this);\n\t\tthis.setRate = this.setRate.bind(this);\n\t}\n\n\tsellDeut() {\n\t\tconst { deut, percentMetal, percentCrystal, rate } = this.state;\n\t\tconst { metal, crystal } = Ogame.Trader.sellDeut(\n\t\t\tdeut,\n\t\t\tpercentMetal,\n\t\t\tpercentCrystal,\n\t\t\trate,\n\t\t);\n\t\tthis.setState({ metal, crystal });\n\t}\n\n\tsellMetal() {\n\t\tconst { metal, percentDeut, percentCrystal, rate } = this.state;\n\t\tconst { crystal, deut } = Ogame.Trader.sellMetal(\n\t\t\tmetal,\n\t\t\tpercentDeut,\n\t\t\tpercentCrystal,\n\t\t\trate,\n\t\t);\n\t\tthis.setState({ deut, crystal });\n\t}\n\n\tsellCrystal() {\n\t\tconst { crystal, percentDeut, percentMetal, rate } = this.state;\n\t\tconst { metal, deut } = Ogame.Trader.sellCrystal(\n\t\t\tcrystal,\n\t\t\tpercentDeut,\n\t\t\tpercentMetal,\n\t\t\trate,\n\t\t);\n\t\tthis.setState({ metal, deut });\n\t}\n\n\tprintResult() {\n\t\tif (this.state.selected === RESOURCES.deut) {\n\t\t\tthis.sellDeut();\n\t\t} else if (this.state.selected === RESOURCES.metal) {\n\t\t\tthis.sellMetal();\n\t\t} else if (this.state.selected === RESOURCES.crystal) {\n\t\t\tthis.sellCrystal();\n\t\t}\n\t}\n\n\thandleOnChange(selected) {\n\t\tthis.setState({ selected });\n\t}\n\n\thandleResourceChange(e, resource) {\n\t\tconst value = Number(e.target.value);\n\t\tif (resource === RESOURCES.deut) {\n\t\t\tthis.setState({ deut: value }, this.printResult);\n\t\t} else if (resource === RESOURCES.metal) {\n\t\t\tthis.setState({ metal: value }, this.printResult);\n\t\t} else if (resource === RESOURCES.crystal) {\n\t\t\tthis.setState({ crystal: value }, this.printResult);\n\t\t}\n\t}\n\n\thandleRateChange(e, resource) {\n\t\tconst value = e.target.value;\n\t\tconst split = this.state.rate.split(':');\n\t\tlet deut = split[2];\n\t\tlet metal = split[0];\n\t\tlet crystal = split[1];\n\t\tlet rate = `${metal}:${crystal}:${deut}`;\n\n\t\tif (resource === RESOURCES.deut) {\n\t\t\trate = `${metal}:${crystal}:${value}`;\n\t\t} else if (resource === RESOURCES.metal) {\n\t\t\trate = `${value}:${crystal}:${deut}`;\n\t\t} else if (resource === RESOURCES.crystal) {\n\t\t\trate = `${metal}:${value}:${deut}`;\n\t\t}\n\t\tthis.setState({ rate }, this.printResult);\n\t}\n\n\troundToHundred(percent, modifiedResource) {\n\t\tconst currentResource = this.state.selected;\n\t\tif (\n\t\t\tcurrentResource === RESOURCES.deut &&\n\t\t\tmodifiedResource === RESOURCES.metal\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentCrystal: 100 - percent,\n\t\t\t};\n\t\t} else if (\n\t\t\tcurrentResource === RESOURCES.deut &&\n\t\t\tmodifiedResource === RESOURCES.crystal\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentMetal: 100 - percent,\n\t\t\t};\n\t\t} else if (\n\t\t\tcurrentResource === RESOURCES.metal &&\n\t\t\tmodifiedResource === RESOURCES.deut\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentCrystal: 100 - percent,\n\t\t\t};\n\t\t} else if (\n\t\t\tcurrentResource === RESOURCES.metal &&\n\t\t\tmodifiedResource === RESOURCES.crystal\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentDeut: 100 - percent,\n\t\t\t};\n\t\t} else if (\n\t\t\tcurrentResource === RESOURCES.crystal &&\n\t\t\tmodifiedResource === RESOURCES.metal\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentDeut: 100 - percent,\n\t\t\t};\n\t\t} else if (\n\t\t\tcurrentResource === RESOURCES.crystal &&\n\t\t\tmodifiedResource === RESOURCES.deut\n\t\t) {\n\t\t\treturn {\n\t\t\t\tpercentMetal: 100 - percent,\n\t\t\t};\n\t\t}\n\t}\n\n\thandlePercentChange(e, resource) {\n\t\tconst percent = this.roundValue(Number(e.target.value));\n\n\t\tif (resource === RESOURCES.deut) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tpercentDeut: percent,\n\t\t\t\t\t...this.roundToHundred(percent, RESOURCES.deut),\n\t\t\t\t},\n\t\t\t\tthis.printResult,\n\t\t\t);\n\t\t} else if (resource === RESOURCES.metal) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tpercentMetal: percent,\n\t\t\t\t\t...this.roundToHundred(percent, RESOURCES.metal),\n\t\t\t\t},\n\t\t\t\tthis.printResult,\n\t\t\t);\n\t\t} else if (resource === RESOURCES.crystal) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tpercentCrystal: percent,\n\t\t\t\t\t...this.roundToHundred(percent, RESOURCES.crystal),\n\t\t\t\t},\n\t\t\t\tthis.printResult,\n\t\t\t);\n\t\t}\n\t}\n\n\tgetRate(resource) {\n\t\tconst split = this.state.rate.split(':');\n\t\tlet deut = split[2];\n\t\tlet metal = split[0];\n\t\tlet crystal = split[1];\n\t\tif (resource === RESOURCES.deut) {\n\t\t\treturn deut;\n\t\t} else if (resource === RESOURCES.metal) {\n\t\t\treturn metal;\n\t\t} else if (resource === RESOURCES.crystal) {\n\t\t\treturn crystal;\n\t\t}\n\t}\n\n\tgetActiveRate(selectedRate) {\n\t\tconst { rate } = this.state;\n\t\tconst isActive = selectedRate === rate;\n\n\t\treturn isActive ? 'primary' : 'light';\n\t}\n\n\tgetActiveTrade(trade) {\n\t\tconst { selected } = this.state;\n\t\tconst isActive = trade === selected;\n\n\t\treturn isActive ? 'primary' : 'light';\n\t}\n\n\tsetRate(selectedRate) {\n\t\tthis.setState({ rate: selectedRate });\n\t}\n\n\tgetPercent(resource) {\n\t\tconst { percentCrystal, percentDeut, percentMetal } = this.state;\n\t\tlet deut = this.roundValue(percentDeut);\n\t\tlet metal = this.roundValue(percentMetal);\n\t\tlet crystal = this.roundValue(percentCrystal);\n\n\t\tif (resource === RESOURCES.deut) {\n\t\t\treturn {\n\t\t\t\tpercentCrystal: crystal,\n\t\t\t\tpercentDeut: 0,\n\t\t\t\tpercentMetal: metal,\n\t\t\t};\n\t\t} else if (resource === RESOURCES.metal) {\n\t\t\treturn {\n\t\t\t\tpercentCrystal: crystal,\n\t\t\t\tpercentDeut: deut,\n\t\t\t\tpercentMetal: 0,\n\t\t\t};\n\t\t} else if (resource === RESOURCES.crystal) {\n\t\t\treturn {\n\t\t\t\tpercentCrystal: 0,\n\t\t\t\tpercentDeut: deut,\n\t\t\t\tpercentMetal: metal,\n\t\t\t};\n\t\t}\n\t}\n\n\tisCurrentRessource(value) {\n\t\treturn value === this.state.selected;\n\t}\n\n\tisNotCurrentResource(resource) {\n\t\treturn this.state.selected !== resource;\n\t}\n\n\troundValue(percent) {\n\t\tif (percent > 100) {\n\t\t\treturn 100;\n\t\t}\n\n\t\treturn percent;\n\t}\n\n\n\trender() {\n\t\tconst { metal, crystal, deut, selected, rate } = this.state;\n\t\tconst { percentMetal, percentCrystal, percentDeut } = this.getPercent(selected);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Col>\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t<h6 className=\"margin-top text-white\">Select ressource</h6>\n\t\t\t\t\t\t<div className=\"margin-bottom\">\n\t\t\t\t\t\t\t<Trades\n\t\t\t\t\t\t\t\thandleOnChange={this.handleOnChange}\n\t\t\t\t\t\t\t\tgetActiveTrade={this.getActiveTrade}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h6 className=\"margin-top text-white\">Rates</h6>\n\t\t\t\t\t<div className=\"text-center margin-bottom\">\n\t\t\t\t\t\t<DefaultRates\n\t\t\t\t\t\t\tgetActiveRate={this.getActiveRate}\n\t\t\t\t\t\t\tsetRate={this.setRate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<RateInputs\n\t\t\t\t\t\tgetRate={this.getRate}\n\t\t\t\t\t\thandleRateChange={this.handleRateChange}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h6 className=\"margin-top text-white\">Percents</h6>\n\t\t\t\t\t<Percents\n\t\t\t\t\t\thandlePercentChange={this.handlePercentChange}\n\t\t\t\t\t\tisCurrentRessource={this.isCurrentRessource}\n\t\t\t\t\t\tpercentCrystal={percentCrystal}\n\t\t\t\t\t\tpercentDeut={percentDeut}\n\t\t\t\t\t\tpercentMetal={percentMetal}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\n\t\t\t\t<Col>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h6 className=\"margin-top text-white\">Resources</h6>\n\t\t\t\t\t<p className={`text-center text-white`}>\n\t\t\t\t\t\t<RateText rate={rate} selected={selected} />\n\t\t\t\t\t</p>\n\t\t\t\t\t<Resources\n\t\t\t\t\t\tcrystal={crystal}\n\t\t\t\t\t\tdeut={deut}\n\t\t\t\t\t\thandleResourceChange={this.handleResourceChange}\n\t\t\t\t\t\tisNotCurrentResource={this.isNotCurrentResource}\n\t\t\t\t\t\tmetal={metal}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\n\t\t\t\t<Col className=\"margin-top text-white text-center\">\n\t\t\t\t\t<PrintResult\n\t\t\t\t\t\tdeut={deut}\n\t\t\t\t\t\tmetal={metal}\n\t\t\t\t\t\tcrystal={crystal}\n\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default Trader;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { STATUS } from '../../components/constants';\n\nclass PlayersStatus extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderStatus = this.renderStatus.bind(this);\n\t}\n\trenderStatus(status, index) {\n\t\tconst color = this.props.getActiveStatus(status);\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tvariant={color}\n\t\t\t\tonClick={() => this.props.setActiveStatus(status)}\n\t\t\t\tclassName={`margin-right-sm`} key={index}>\n\t\t\t\t{STATUS[status]}\n\t\t\t</Button>\n\t\t);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Row className=\"text-center\">\n\t\t\t\t<Col>\n\t\t\t\t\t{Object.keys(STATUS).map((status, index) => this.renderStatus(status, index))}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t)\n\t}\n}\n\nexport default PlayersStatus;\n","import React from 'react';\nimport { CORSPROXY, POSITIONS } from '../../components/constants';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\n\nclass PlayersDetails extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tplanets: [],\n\t\t\tpositions: [],\n\t\t};\n\n\t\tthis.getPlayerData();\n\t}\n\n\tasync getPlayerData() {\n\t\tconst { universe, lang, player } = this.props;\n\t\ttry {\n\t\t\tconst url = `https://s${universe}-${lang}.ogame.gameforge.com/api/playerData.xml?id=${player.id}`;\n\t\t\tconst response = await fetch(CORSPROXY + url);\n\t\t\tconst text = await response.text();\n\t\t\tconst xml = new window.DOMParser().parseFromString(text, \"text/xml\");\n\t\t\tconst positionsXml = xml.getElementsByTagName('position');\n\t\t\tconst planetsXml = xml.getElementsByTagName('planet');\n\n\t\t\tconst positions = [];\n\t\t\tfor (const position of positionsXml) {\n\t\t\t\tconst type = position.getAttribute('type');\n\t\t\t\tconst score = position.getAttribute('score');\n\t\t\t\tpositions.push({\n\t\t\t\t\ttype,\n\t\t\t\t\tscore: this.prettify(score),\n\t\t\t\t\ttypeLongName: POSITIONS[type]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst planets = [];\n\t\t\tfor (const planet of planetsXml) {\n\t\t\t\tconst coords = planet.getAttribute('coords');\n\t\t\t\tconst [galaxy, system, position] = coords.split(':');\n\t\t\t\tconst planetData = {\n\t\t\t\t\tid: planet.getAttribute('id'),\n\t\t\t\t\tname: planet.getAttribute('name'),\n\t\t\t\t\tcoords,\n\t\t\t\t\tgalaxy,\n\t\t\t\t\tsystem,\n\t\t\t\t\tposition,\n\t\t\t\t}\n\n\t\t\t\tconst moon = planet.getElementsByTagName('moon')[0];\n\t\t\t\tif (moon) {\n\t\t\t\t\tplanetData.moon = {\n\t\t\t\t\t\tid: moon.getAttribute('id'),\n\t\t\t\t\t\tname: moon.getAttribute('name'),\n\t\t\t\t\t\tsize: moon.getAttribute('size')\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tplanets.push(planetData);\n\t\t\t}\n\n\t\t\tthis.setState({ planets, positions });\n\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tprettify(x) {\n\t\treturn x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h4 className=\"text-center\">{this.props.player.name}</h4>\n\t\t\t\t<Table striped bordered hover>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t\t<th>score</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{this.state.positions.map(positions => (\n\t\t\t\t\t\t\t<tr key={positions.type} className=\"clickable\">\n\t\t\t\t\t\t\t\t<td>{positions.typeLongName}</td>\n\t\t\t\t\t\t\t\t<td>{positions.score}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t\t<Table striped bordered hover>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t<th>Coords</th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{this.state.planets.map(({ id, name, coords, galaxy, system, position }) => (\n\t\t\t\t\t\t\t<tr key={id} className=\"clickable\">\n\t\t\t\t\t\t\t\t<td>{name}</td>\n\t\t\t\t\t\t\t\t<td>{coords}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"float-right\"\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\t\t`https://s165-fr.ogame.gameforge.com/game/index.php?page=ingame&component=galaxy&galaxy=${galaxy}&system=${system}&position=${position}`\n\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\tOpen in galaxy\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default PlayersDetails;\n","import React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport FuzzySearch from 'fuzzy-search';\nimport PlayersStatus from './components/PlayersStatus';\nimport { STATUS, CORSPROXY } from '../components/constants';\nimport PlayersDetails from './components/PlayerDetails';\n\nclass Players extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlang: \"fr\",\n\t\t\tplayer: {},\n\t\t\tplayers: [],\n\t\t\tselected: [],\n\t\t\tshow: false,\n\t\t\tstatus: Object.keys(STATUS),\n\t\t\tuniverse: 165,\n\t\t\tsearch: '',\n\t\t};\n\n\t\tthis.getActiveStatus = this.getActiveStatus.bind(this);\n\t\tthis.handleClose = this.handleClose.bind(this);\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\n\t\tthis.handleShow = this.handleShow.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.setActiveStatus = this.setActiveStatus.bind(this);\n\n\t\tthis.searchPlayers(this.state.lang, this.state.universe);\n\t}\n\n\thandleClose() {\n\t\tthis.setState({ show: false });\n\t}\n\n\thandleShow(player) {\n\t\tthis.setState({ show: true, player });\n\t}\n\n\thandleOnChange(event) {\n\t\tconst { players } = this.state;\n\t\tconst search = event.currentTarget.value;\n\t\tconst searcher = new FuzzySearch(players, ['name']);\n\t\tconst result = searcher.search(search);\n\t\tthis.setState({ search, selected: result });\n\t}\n\n\tasync searchPlayers(lang, universe) {\n\t\ttry {\n\t\t\tconst url = `https://s${universe}-${lang}.ogame.gameforge.com/api/players.xml`;\n\t\t\tconst response = await fetch(CORSPROXY + url);\n\t\t\tconst text = await response.text();\n\t\t\tconst xml = new window.DOMParser().parseFromString(text, \"text/xml\")\n\t\t\tconst playersXml = xml.getElementsByTagName('player')\n\n\t\t\tconst players = [];\n\t\t\tfor (const player of playersXml) {\n\t\t\t\tconst id = player.getAttribute('id');\n\t\t\t\tconst name = player.getAttribute('name');\n\t\t\t\tconst status = player.getAttribute('status') || 'A'; // by default Active user does not have any status\n\n\t\t\t\tplayers.push({ id, name, status });\n\t\t\t}\n\n\t\t\tthis.setState({ selected: players, players, lang, universe });\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tconst lang = event.currentTarget.lang.value;\n\t\tconst universe = event.currentTarget.universe.value;\n\t\tthis.searchPlayer(lang, universe);\n\t}\n\n\tgetActiveStatus(status) {\n\t\treturn this.state.status.includes(status) ? 'primary' : 'light';\n\t}\n\n\tsetActiveStatus(selectedStatus) {\n\t\tconst status = this.state.status.includes(selectedStatus) ?\n\t\t\tthis.state.status.filter(s => s !== selectedStatus)\n\t\t\t: [...this.state.status, ...selectedStatus];\n\n\t\tif (!status.length) {\n\t\t\t// Avoid user to remove all filters\n\t\t\tstatus.push(selectedStatus);\n\t\t}\n\t\tthis.setState({ status }, this.refreshPlayers);\n\t}\n\n\trefreshPlayers() {\n\t\tconst { status, players, search } = this.state;\n\t\tconst statusRegex = new RegExp(`[${status.join('')}]+`);\n\t\tconst playerRegex = new RegExp(search);\n\t\tconst selected = players.filter(player => statusRegex.test(player.status));\n\t\tthis.setState({ selected: selected.filter(s => playerRegex.exec(s)) });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t<Col sm={12}>\n\t\t\t\t\t<Form onSubmit={this.handleSubmit} className=\"m-4\">\n\t\t\t\t\t\t<Row className=\"w-100 justify-content-center\">\n\t\t\t\t\t\t\t<Col xs=\"auto\">\n\t\t\t\t\t\t\t\t<Form.Control type=\"number\" name=\"universe\" placeholder=\"universe\" size=\"sm\" defaultValue=\"165\" />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col xs=\"auto\">\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"lang\" placeholder=\"fr\" size=\"sm\" defaultValue=\"fr\" />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col xs=\"auto\">\n\t\t\t\t\t\t\t\t<Button variant=\"light\" type=\"submit\">Submit</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Form>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={12}>\n\t\t\t\t\t<h4 className=\"text-white text-center\">{this.state.lang} - {this.state.universe}</h4>\n\t\t\t\t\t<PlayersStatus\n\t\t\t\t\t\tgetActiveStatus={this.getActiveStatus}\n\t\t\t\t\t\tsetActiveStatus={this.setActiveStatus}\n\t\t\t\t\t/>\n\t\t\t\t\t<Row className=\"m-2\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Form.Control placeholder=\"Search by player's name\" onChange={this.handleOnChange} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Table striped bordered hover variant=\"dark\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{this.state.selected.map(player => (\n\t\t\t\t\t\t\t\t<tr key={player.id} className=\"clickable\">\n\t\t\t\t\t\t\t\t\t<td>{player.name}</td>\n\t\t\t\t\t\t\t\t\t<td>{player.status}</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => this.handleShow(player)}>\n\t\t\t\t\t\t\t\t\t\t\tOpen details\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</Col>\n\n\t\t\t\t<Modal show={this.state.show} onHide={this.handleClose} animation={false}>\n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title>Player details</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\n\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t<PlayersDetails player={this.state.player} lang={this.state.lang} universe={this.state.universe} />\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t</Modal>\n\t\t\t</Row>\n\t\t)\n\t}\n}\n\nexport default Players;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tLink\n} from \"react-router-dom\";\nimport Home from './Home';\nimport Trader from './Trader/Trader';\nimport Players from './Players/Players';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Link className=\"ml-3\" to=\"/\">Home</Link>\n\t\t\t\t\t\t<Link className=\"ml-3\" to=\"trades\">Trades</Link>\n\t\t\t\t\t\t<Link className=\"ml-3\" to=\"players\">Players</Link>\n\t\t\t\t\t\t<Link className=\"ml-3\" to=\"market\">Market</Link>\n\t\t\t\t\t\t<Link className=\"ml-3\" to=\"mining\">Mining</Link>\n\t\t\t\t\t\t<Link className=\"ml-3\" to=\"universes\">Universes</Link>\n\t\t\t\t\t\t<Link className=\"ml-3\" to=\"score\">Scores</Link>\n\t\t\t\t\t\t<Link className=\"ml-3\" to=\"alliances\">Alliances</Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar>\n\n\t\t\t\t<Container fluid className=\"full-height\">\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t<Route path=\"/trades\">\n\t\t\t\t\t\t\t\t\t\t<Trader />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path=\"/players\">\n\t\t\t\t\t\t\t\t\t\t<Players />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path=\"/market\">\n\t\t\t\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path=\"/mining\">\n\t\t\t\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path=\"/universes\">\n\t\t\t\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path=\"/score\">\n\t\t\t\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path=\"/alliances\">\n\t\t\t\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Router path=\"/\">\n\t\t\t\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t\t\t\t</Router>\n\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t</Router>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional infoging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.info(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.info(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.info(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app.scss';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}