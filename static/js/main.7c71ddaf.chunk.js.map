{"version":3,"sources":["components/NumberInput.js","components/CopyButton.js","components/PrintResult.js","components/RadioButton.js","components/RateText.js","components/Title.js","App.js","serviceWorker.js","index.js"],"names":["TextInput","className","type","value","this","props","onChange","placeholder","disabled","min","max","maxValue","React","Component","CopyButton","copy","text","onClick","e","handleOnClick","PrintResult","x","toString","replace","metalText","crystalText","deutText","selected","metal","crystal","deut","prettify","getText","Fragment","RadioButton","htmlFor","id","data-toggle","name","checked","RateText","rate","Ogame","parseRate","rateMetal","rateCrystal","rateDeut","Title","App","state","percentDeut","percentMetal","percentCrystal","sellDeut","setState","sellMetal","sellCrystal","target","resource","Number","printResult","split","percent","modifiedResource","currentResource","roundValue","roundToHundred","getPercent","isCurrentRessource","handleOnChange","getRate","handleRateChange","handlePercentChange","handleResourceChange","isNotCurrentResource","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c71ddaf.chunk.js","sourcesContent":["import React from \"react\";\n\nclass TextInput extends React.Component {\n  render() {\n    return (\n      <div className=\"form-groups\">\n        <input\n          type=\"number\"\n          value={this.props.value}\n          onChange={this.props.onChange}\n          className=\"form-control input-xs\"\n          placeholder={this.props.placeholder}\n          disabled={this.props.disabled ? \"disabled\" : \"\"}\n          min=\"0\"\n          max={this.props.maxValue}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TextInput;\n","import React from \"react\";\nimport copy from \"copy-to-clipboard\";\n\nclass CopyButton extends React.Component {\n  handleOnClick() {\n    copy(this.props.text);\n  }\n  render() {\n    return (\n      <button onClick={e => this.handleOnClick(e)} className=\"btn btn-success\">\n        Copy\n      </button>\n    );\n  }\n}\n\nexport default CopyButton;\n","import React from \"react\";\nimport CopyButton from \"./CopyButton\";\n\nclass PrintResult extends React.Component {\n  prettify(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  }\n  getText(metalText, crystalText, deutText, selected) {\n    let text = \"\";\n    if (selected === \"deut\") {\n      text = `Trade:\\n${deutText} deut\\n\\nAgainst:\\n${metalText} metal\\n${crystalText} crystal`;\n    } else if (selected === \"crystal\") {\n      text = `Trade:\\n${crystalText} crystal\\n\\nAgainst:\\n${metalText} metal\\n${deutText} deut`;\n    } else if (selected === \"metal\") {\n      text = `Trade:\\n${metalText} metal\\n\\nAgainst:\\n${deutText} deut\\n${crystalText} crystal`;\n    } else {\n      text = \"Nothing to sell yet\";\n    }\n\n    return text;\n  }\n  render() {\n    const { metal, crystal, deut, selected } = this.props;\n    const deutText = this.prettify(deut);\n    const metalText = this.prettify(metal);\n    const crystalText = this.prettify(crystal);\n    const text = this.getText(metalText, crystalText, deutText, selected);\n\n    if (selected === \"deut\") {\n      return (\n        <React.Fragment>\n          <div className=\"col-xs-12\">\n            <div>deut: {deutText}</div>\n            <div>metal: {metalText}</div>\n            <div>crystal: {crystalText}</div>\n          </div>\n          <div className=\"col-xs-12 margin-top\">\n            <CopyButton text={text} />\n          </div>\n        </React.Fragment>\n      );\n    } else if (selected === \"crystal\") {\n      return (\n        <React.Fragment>\n          <div className=\"col-xs-12\">\n            <div>crystal: {crystalText}</div>\n            <div>metal: {metalText}</div>\n            <div>deut: {deutText}</div>\n          </div>\n          <div className=\"col-xs-12 margin-top\">\n            <CopyButton text={text} />\n          </div>\n        </React.Fragment>\n      );\n    } else if (selected === \"metal\") {\n      return (\n        <React.Fragment>\n          <div className=\"col-xs-12\">\n            <div>metal: {metalText}</div>\n            <div>deut: {deutText}</div>\n            <div>crystal: {crystalText}</div>\n          </div>\n          <div className=\"col-xs-12 margin-top\">\n            <CopyButton text={text} />\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default PrintResult;\n","import React from \"react\";\n\nclass RadioButton extends React.Component {\n  render() {\n    return (\n      <label className=\"radio\" htmlFor={this.props.id}>\n        <input\n          type=\"radio\"\n          data-toggle=\"radio\"\n          className=\"custom-radio\"\n          id={this.props.id}\n          name={this.props.value}\n          value={this.props.value}\n          checked={this.props.checked}\n          onChange={this.props.onChange}\n        />\n        <span className=\"icons\">\n          <span className=\"icon-unchecked\" />\n          <span className=\"icon-checked\" />\n        </span>\n        {this.props.text}\n      </label>\n    );\n  }\n}\n\nexport default RadioButton;\n","import React from \"react\";\nimport Ogame from \"ogamejs\";\n\nclass RateText extends React.Component {\n  render() {\n    const { rate, selected } = this.props;\n    const { rateMetal, rateCrystal, rateDeut } = Ogame.parseRate(\n      rate,\n      selected\n    );\n    if (selected === \"deut\") {\n      return `${rateDeut} deut = ${rateMetal} metal and ${rateCrystal} crystal`;\n    } else if (selected === \"metal\") {\n      return `${rateMetal} metal = ${rateDeut} deut and ${rateCrystal} crystal`;\n    } else if (selected === \"crystal\") {\n      return `${rateCrystal} crystal = ${rateDeut} deut and ${rateMetal} metal`;\n    } else {\n      return \"Nothing selected\";\n    }\n  }\n}\n\nexport default RateText;\n","import React from \"react\";\n\nclass Title extends React.Component {\n  render() {\n    return <h1>Ogame commerce</h1>;\n  }\n}\n\nexport default Title;\n","import Ogame from \"ogamejs\";\nimport React, { Component } from \"react\";\n\n/** Components import */\nimport NumberIntput from \"./components/NumberInput\";\nimport PrintResult from \"./components/PrintResult\";\nimport RadioButton from \"./components/RadioButton\";\nimport RateText from \"./components/RateText\";\nimport Title from \"./components/Title\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      deut: 0,\n      metal: 0,\n      crystal: 0,\n      percentDeut: 0,\n      percentMetal: 60,\n      percentCrystal: 40,\n      selected: \"deut\",\n      rate: \"2:1.5:1\"\n    };\n  }\n\n  sellDeut() {\n    const { deut, percentMetal, percentCrystal, rate } = this.state;\n    const { metal, crystal } = Ogame.sellDeut(\n      deut,\n      percentMetal,\n      percentCrystal,\n      rate\n    );\n    this.setState({ metal, crystal });\n  }\n\n  sellMetal() {\n    const { metal, percentDeut, percentCrystal, rate } = this.state;\n    const { crystal, deut } = Ogame.sellMetal(\n      metal,\n      percentDeut,\n      percentCrystal,\n      rate\n    );\n    this.setState({ deut, crystal });\n  }\n\n  sellCrystal() {\n    const { crystal, percentDeut, percentMetal, rate } = this.state;\n    const { metal, deut } = Ogame.sellCrystal(\n      crystal,\n      percentDeut,\n      percentMetal,\n      rate\n    );\n    this.setState({ metal, deut });\n  }\n\n  printResult() {\n    if (this.state.selected === \"deut\") {\n      this.sellDeut();\n    } else if (this.state.selected === \"metal\") {\n      this.sellMetal();\n    } else if (this.state.selected === \"crystal\") {\n      this.sellCrystal();\n    }\n  }\n\n  handleOnChange(e, selected) {\n    if (e.target.checked) {\n      this.setState({ selected });\n    }\n  }\n\n  handleResourceChange(e, resource) {\n    const value = Number(e.target.value);\n    if (resource === \"deut\") {\n      this.setState({ deut: value }, this.printResult);\n    } else if (resource === \"metal\") {\n      this.setState({ metal: value }, this.printResult);\n    } else if (resource === \"crystal\") {\n      this.setState({ crystal: value }, this.printResult);\n    }\n  }\n\n  handleRateChange(e, resource) {\n    const value = e.target.value;\n    const split = this.state.rate.split(\":\");\n    let deut = split[2];\n    let metal = split[0];\n    let crystal = split[1];\n    let rate = `${metal}:${crystal}:${deut}`;\n\n    if (resource === \"deut\") {\n      rate = `${metal}:${crystal}:${value}`;\n    } else if (resource === \"metal\") {\n      rate = `${value}:${crystal}:${deut}`;\n    } else if (resource === \"crystal\") {\n      rate = `${metal}:${value}:${deut}`;\n    }\n    this.setState({ rate }, this.printResult);\n  }\n\n  roundToHundred(percent, modifiedResource) {\n    const currentResource = this.state.selected;\n    if (currentResource === \"deut\" && modifiedResource === \"metal\") {\n      return {\n        percentCrystal: 100 - percent\n      };\n    } else if (currentResource === \"deut\" && modifiedResource === \"crystal\") {\n      return {\n        percentMetal: 100 - percent\n      };\n    } else if (currentResource === \"metal\" && modifiedResource === \"deut\") {\n      return {\n        percentCrystal: 100 - percent\n      };\n    } else if (currentResource === \"metal\" && modifiedResource === \"crystal\") {\n      return {\n        percentDeut: 100 - percent\n      };\n    } else if (currentResource === \"crystal\" && modifiedResource === \"metal\") {\n      return {\n        percentDeut: 100 - percent\n      };\n    } else if (currentResource === \"crystal\" && modifiedResource === \"deut\") {\n      return {\n        percentMetal: 100 - percent\n      };\n    }\n  }\n\n  handlePercentChange(e, resource) {\n    const percent = this.roundValue(Number(e.target.value));\n\n    if (resource === \"deut\") {\n      this.setState(\n        { percentDeut: percent, ...this.roundToHundred(percent, \"deut\") },\n        this.printResult\n      );\n    } else if (resource === \"metal\") {\n      this.setState(\n        { percentMetal: percent, ...this.roundToHundred(percent, \"metal\") },\n        this.printResult\n      );\n    } else if (resource === \"crystal\") {\n      this.setState(\n        { percentCrystal: percent, ...this.roundToHundred(percent, \"crystal\") },\n        this.printResult\n      );\n    }\n  }\n\n  getRate(resource) {\n    const split = this.state.rate.split(\":\");\n    let deut = split[2];\n    let metal = split[0];\n    let crystal = split[1];\n    if (resource === \"deut\") {\n      return deut;\n    } else if (resource === \"metal\") {\n      return metal;\n    } else if (resource === \"crystal\") {\n      return crystal;\n    }\n  }\n\n  roundValue(percent) {\n    if (percent > 100) {\n      return 100;\n    }\n\n    return percent;\n  }\n\n  getPercent(resource) {\n    const { percentCrystal, percentDeut, percentMetal } = this.state;\n    let deut = this.roundValue(percentDeut);\n    let metal = this.roundValue(percentMetal);\n    let crystal = this.roundValue(percentCrystal);\n\n    if (resource === \"deut\") {\n      return {\n        percentCrystal: crystal,\n        percentDeut: 0,\n        percentMetal: metal\n      };\n    } else if (resource === \"metal\") {\n      return {\n        percentCrystal: crystal,\n        percentDeut: deut,\n        percentMetal: 0\n      };\n    } else if (resource === \"crystal\") {\n      return {\n        percentCrystal: 0,\n        percentDeut: deut,\n        percentMetal: metal\n      };\n    }\n  }\n\n  isCurrentRessource(value) {\n    return value === this.state.selected;\n  }\n\n  isNotCurrentResource(resource) {\n    return this.state.selected !== resource;\n  }\n\n  render() {\n    const { metal, crystal, deut, selected, rate } = this.state;\n    const { percentMetal, percentCrystal, percentDeut } = this.getPercent(\n      selected\n    );\n    return (\n      <div className=\"container container-fluid\">\n        <div className=\"col-xs-12\">\n          <div className=\"text-center\">\n            <Title />\n            <hr />\n          </div>\n\n          {/* SELECT RESSOURCE TO TRADE */}\n          <div className=\"col-xs-6\">\n            <h4>Resources to trade</h4>\n            <RadioButton\n              id=\"metal\"\n              text=\"metal\"\n              value=\"selected\"\n              checked={this.isCurrentRessource(\"metal\")}\n              onChange={e => this.handleOnChange(e, \"metal\")}\n            />\n            <RadioButton\n              id=\"crystal\"\n              text=\"crystal\"\n              value=\"selected\"\n              checked={this.isCurrentRessource(\"crystal\")}\n              onChange={e => this.handleOnChange(e, \"crystal\")}\n            />\n            <RadioButton\n              id=\"deut\"\n              text=\"deut\"\n              value=\"selected\"\n              checked={this.isCurrentRessource(\"deut\")}\n              onChange={e => this.handleOnChange(e, \"deut\")}\n            />\n          </div>\n\n          {/* CHANGE RATES */}\n          <div className=\"col-xs-6\">\n            <div className=\"col-xs-4\">\n              metal\n              <NumberIntput\n                value={this.getRate(\"metal\")}\n                onChange={e => this.handleRateChange(e, \"metal\")}\n                placeholder=\"metal\"\n              />\n            </div>\n            <div className=\"col-xs-4\">\n              crystal\n              <NumberIntput\n                value={this.getRate(\"crystal\")}\n                onChange={e => this.handleRateChange(e, \"crystal\")}\n                placeholder=\"crystal\"\n              />\n            </div>\n            <div className=\"col-xs-4\">\n              deuterium\n              <NumberIntput\n                value={this.getRate(\"deut\")}\n                onChange={e => this.handleRateChange(e, \"deut\")}\n                placeholder=\"deut\"\n              />\n            </div>\n\n            {/* CHANGE PERCENT */}\n            <div className=\"col-xs-12\">\n              <hr />\n              <div className=\"col-xs-4\">\n                %metal\n                <NumberIntput\n                  value={percentMetal}\n                  onChange={e => this.handlePercentChange(e, \"metal\")}\n                  placeholder=\"metal\"\n                  disabled={this.isCurrentRessource(\"metal\")}\n                  maxValue=\"100\"\n                />\n              </div>\n              <div className=\"col-xs-4\">\n                %crystal\n                <NumberIntput\n                  value={percentCrystal}\n                  onChange={e => this.handlePercentChange(e, \"crystal\")}\n                  placeholder=\"crystal\"\n                  disabled={this.isCurrentRessource(\"crystal\")}\n                  maxValue=\"100\"\n                />\n              </div>\n              <div className=\"col-xs-4\">\n                %deut\n                <NumberIntput\n                  value={percentDeut}\n                  onChange={e => this.handlePercentChange(e, \"deut\")}\n                  placeholder=\"deut\"\n                  disabled={this.isCurrentRessource(\"deut\")}\n                  maxValue=\"100\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* CHANGE RESOURCES TO TRADE */}\n          <div className=\"col-xs-12\">\n            <hr />\n            <h4>Resources</h4>\n            <p className=\"text-center\">\n              <RateText rate={rate} selected={selected} />\n            </p>\n\n            <div className=\"col-xs-4\">\n              metal\n              <NumberIntput\n                value={metal}\n                onChange={e => this.handleResourceChange(e, \"metal\")}\n                placeholder=\"metal\"\n                disabled={this.isNotCurrentResource(\"metal\")}\n              />\n            </div>\n            <div className=\"col-xs-4\">\n              crystal\n              <NumberIntput\n                value={crystal}\n                onChange={e => this.handleResourceChange(e, \"crystal\")}\n                placeholder=\"crystal\"\n                disabled={this.isNotCurrentResource(\"crystal\")}\n              />\n            </div>\n            <div className=\"col-xs-4\">\n              deut\n              <NumberIntput\n                value={deut}\n                onChange={e => this.handleResourceChange(e, \"deut\")}\n                placeholder=\"deut\"\n                disabled={this.isNotCurrentResource(\"deut\")}\n              />\n            </div>\n          </div>\n\n          {/* PRINT THE RESULT */}\n          <div className=\"col-xs-12\">\n            <div className=\"text-center\">\n              <hr />\n              <PrintResult\n                deut={deut}\n                metal={metal}\n                crystal={crystal}\n                selected={selected}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}